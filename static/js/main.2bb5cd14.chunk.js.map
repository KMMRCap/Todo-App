{"version":3,"sources":["components/Form/FormInput.js","components/Form/LoginForm.js","components/Form/SignUpForm.js","common/TimeFormatter.js","context/Context.js","components/Todo/TodoForm.js","components/Todo/TodoCard.js","components/Todo/Todo.js","components/Landing/Landing.js","components/App.js","index.js"],"names":["FormInput","props","className","htmlFor","for","label","id","name","placeholder","type","LoginForm","initialValues","email","password","validate","values","errors","test","length","onSubmit","setSubmitting","setTimeout","alert","JSON","stringify","to","SignUpForm","firstName","lastName","passwordRepeat","match","createdTimeFormatter","date","todoDate","getFullYear","getMonth","getDate","todoTime","getHours","getMinutes","getSeconds","Contexts","createContext","todos","setTodos","title","setTitle","text","setText","timer","setTimer","Context","children","useState","Provider","value","TodoForm","useContext","e","preventDefault","newTodo","uuidv4","isChecked","createdTime","Date","now","setInterval","time","slice","minutes","Math","floor","stopWatchFormatter","toFixed","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","onChange","target","TodoCard","editable","setEditable","todoTitle","setTodoTitle","inputElement","useRef","style","background","ref","pointerEvents","onClick","filteredTodos","filter","todo","handleDeleteTodo","icon","faTrash","changedTodos","editedTodo","savedTodos","sort","a","b","handleSaveTodo","faSave","current","focus","faEdit","checkedList","map","item","handleCheckTodo","faCheck","at","Todo","useEffect","data","localStorage","getItem","parse","setItem","console","log","active","Landing","App","newestOnTop","rtl","pauseOnFocusLoss","path","element","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"sOAqBeA,EAlBG,SAACC,GACf,OACI,sBAAKC,UAAU,OAAf,UACI,uBAAOA,UAAU,wBAAwBC,QAASF,EAAMG,IAAxD,SAA8DH,EAAMI,QACpE,cAAC,IAAD,CACIH,UAAU,eACVI,GAAIL,EAAMK,GACVC,KAAMN,EAAMM,KACZC,YAAaP,EAAMO,YACnBC,KAAMR,EAAMQ,OAEhB,sBAAMP,UAAU,cAAhB,SACI,cAAC,IAAD,CAAcK,KAAMN,EAAMM,aCmE3BG,EA7EG,SAACT,GAEf,OACI,sBAAKC,UAAU,6BAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,cAAC,IAAD,CACIS,cAAe,CACXC,MAAO,GACPC,SAAU,IAGdC,SAAU,SAAAC,GACN,IAAMC,EAAS,GAcf,OAZKD,EAAOH,MAEA,4CAA4CK,KAAKF,EAAOH,SAChEI,EAAOJ,MAAQ,yBAFfI,EAAOJ,MAAQ,WAKdG,EAAOF,SAEDE,EAAOF,SAASK,OAAS,IAChCF,EAAOH,SAAW,iCAFlBG,EAAOH,SAAW,WAKfG,GAGXG,SAAU,SAACJ,EAAD,GAAgC,IAArBK,EAAoB,EAApBA,cACjBC,YAAW,WACPC,MAAMC,KAAKC,UAAUT,EAAQ,KAAM,IACnCK,GAAc,KACf,MA5BX,SAgCI,eAAC,IAAD,WACI,cAAC,EAAD,CACIf,MAAM,gBACND,IAAI,QACJE,GAAG,QACHC,KAAK,QACLC,YAAY,gBACZC,KAAK,UAGT,cAAC,EAAD,CACIJ,MAAM,WACND,IAAI,WACJE,GAAG,WACHC,KAAK,WACLC,YAAY,SACZC,KAAK,aAGT,sBAAKP,UAAU,+DAAf,UACI,wBAAQO,KAAK,SAASP,UAAU,mCAAhC,oBACA,mBAAGA,UAAU,kCAAb,2BACA,cAAC,IAAD,CAAMuB,GAAG,UAAT,SACI,oBAAIvB,UAAU,0BAAd,iCAOpB,cAAC,IAAD,CAAMuB,GAAG,IAAT,SACI,wBAAQvB,UAAU,gCAAlB,4BAEJ,cAAC,IAAD,CAAMuB,GAAG,QAAT,SACI,wBAAQvB,UAAU,6BAAlB,4BC+CDwB,EAtHI,WAEf,OACI,sBAAKxB,UAAU,6BAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,cAAC,IAAD,CACIS,cAAe,CACXgB,UAAW,GACXC,SAAU,GACVhB,MAAO,GACPC,SAAU,GACVgB,eAAgB,IAGpBf,SAAU,SAAAC,GACN,IAAMC,EAAS,GAgCf,OA9BKD,EAAOY,UAEDZ,EAAOY,UAAUG,MAAM,UAC9Bd,EAAOW,UAAY,uBAFnBX,EAAOW,UAAY,WAKlBZ,EAAOa,SAEDb,EAAOY,UAAUG,MAAM,UAC9Bd,EAAOY,SAAW,uBAFlBZ,EAAOY,SAAW,WAKjBb,EAAOH,MAEA,4CAA4CK,KAAKF,EAAOH,SAChEI,EAAOJ,MAAQ,yBAFfI,EAAOJ,MAAQ,WAKdG,EAAOF,SAEDE,EAAOF,SAASK,OAAS,IAChCF,EAAOH,SAAW,iCAFlBG,EAAOH,SAAW,WAKjBE,EAAOc,eAEDd,EAAOc,iBAAmBd,EAAOF,WACxCG,EAAOa,eAAiB,8BAFxBb,EAAOa,eAAiB,WAKrBb,GAGXG,SAAU,SAACJ,EAAD,GAAgC,IAArBK,EAAoB,EAApBA,cACjBC,YAAW,WACPC,MAAMC,KAAKC,UAAUT,EAAQ,KAAM,IACnCK,GAAc,KACf,MAjDX,SAoDI,eAAC,IAAD,WACI,cAAC,EAAD,CACIf,MAAM,aACND,IAAI,YACJE,GAAG,YACHC,KAAK,YACLC,YAAY,MACZC,KAAK,SAET,cAAC,EAAD,CACIJ,MAAM,YACND,IAAI,WACJE,GAAG,WACHC,KAAK,WACLC,YAAY,YACZC,KAAK,SAET,cAAC,EAAD,CACIJ,MAAM,QACND,IAAI,QACJE,GAAG,QACHC,KAAK,QACLC,YAAY,gBACZC,KAAK,UAET,cAAC,EAAD,CACIJ,MAAM,WACND,IAAI,WACJE,GAAG,WACHC,KAAK,WACLC,YAAY,SACZC,KAAK,aAET,cAAC,EAAD,CACIJ,MAAM,kBACND,IAAI,iBACJE,GAAG,iBACHC,KAAK,iBACLC,YAAY,SACZC,KAAK,aAET,sBAAKP,UAAU,+DAAf,UACI,wBAAQO,KAAK,SAASP,UAAU,mCAAhC,qBACA,mBAAGA,UAAU,kCAAb,iCACA,cAAC,IAAD,CAAMuB,GAAG,SAAT,SACI,oBAAIvB,UAAU,0BAAd,gCAMpB,cAAC,IAAD,CAAMuB,GAAG,IAAT,SACI,wBAAQvB,UAAU,gCAAlB,4BAEJ,cAAC,IAAD,CAAMuB,GAAG,QAAT,SACI,wBAAQvB,UAAU,6BAAlB,4B,uBC5GH6B,EAAuB,SAACC,GACjC,IAAMC,EAAWD,EAAKE,cAAgB,KAAOF,EAAKG,WAAa,GAAK,IAAMH,EAAKI,UACzEC,EAAWL,EAAKM,WAAa,IAAMN,EAAKO,aAAe,IAAMP,EAAKQ,aAGxE,MAAM,GAAN,OAAUP,EAAV,cAAwBI,ICZfI,EAAWC,wBAAc,CAClCC,MAAO,GAAIC,SAAU,aACrBC,MAAO,GAAIC,SAAU,aACrBC,KAAM,GAAIC,QAAS,aACnBC,MAAO,GAAIC,SAAU,eAMZC,EAAU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEtB,EAA0BC,mBAAS,IAAnC,mBAAOV,EAAP,KAAcC,EAAd,KACA,EAA0BS,mBAAS,IAAnC,mBAAOR,EAAP,KAAcC,EAAd,KACA,EAAwBO,mBAAS,IAAjC,mBAAON,EAAP,KAAaC,EAAb,KACA,EAA0BK,mBAAS,IAAnC,mBAAOJ,EAAP,KAAcC,EAAd,KAIA,OACI,cAACT,EAASa,SAAV,CAAmBC,MAAO,CACtBZ,QAAOC,WACPC,QAAOC,WACPC,OAAMC,UACNC,QAAOC,YAJX,SAQKE,KC4CEI,EApEE,SAACvD,GAEd,MAA0BoD,mBAAS,IAAnC,mBAAOR,EAAP,KAAcC,EAAd,KACA,EAAwBO,mBAAS,IAAjC,mBAAON,EAAP,KAAaC,EAAb,KACA,EAA4BS,qBAAWhB,GAA/BQ,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAkCf,OAEI,uBACI/B,SAnCc,SAACuC,GAEnB,GADAA,EAAEC,iBACEd,GAASE,EAAM,CACf,IAAIa,EAAU,CACVf,QACAE,OACAzC,GAAIuD,cACJC,WAAW,EACXC,YAAahC,EAAqB,IAAIiC,MACtChC,KAAMgC,KAAKC,OAEfhE,EAAM2C,SAAN,sBAAmB3C,EAAM0C,OAAzB,CAAgCiB,KAChCd,EAAS,IACTE,EAAQ,IACRkB,aAAY,WACR,IAAIC,EF3Bc,SAAClB,GAC/B,IAAMT,EAAa,WAAKS,EAAQ,IAAMmB,OAAO,GACvCC,EAAO,UAAMC,KAAKC,MAAMtB,EAAQ,KAChCV,EAAa,WAAI8B,EAAU,IAAKD,OAAO,GACvC9B,EAAW,WAAIgC,KAAKC,MAAMtB,EAAQ,OAAQmB,OAAO,GAEvD,MAAM,GAAN,OAAU9B,EAAV,cAAwBC,EAAxB,cAAwCC,GEqBjBgC,GAAqBR,KAAKC,MAAQL,EAAQ5B,MAAQ,KAAMyC,WACnEvB,EAAS,GAAD,mBAAKD,GAAL,CAAYkB,OACrB,UAGHO,IAAMC,MAAM,mBAAoB,CAC5BC,SAAU,WACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,KASdjF,UAAU,sDAFd,UAGI,2CACA,sBAAKA,UAAU,OAAf,UACI,uBAAOA,UAAU,aAAjB,mBACA,uBACIqD,MAAOV,EACPuC,SAAU,SAAA1B,GAAC,OAAIZ,EAASY,EAAE2B,OAAO9B,QACjC9C,KAAK,OACLP,UAAU,oBAGlB,sBAAKA,UAAU,OAAf,UACI,uBAAOA,UAAU,aAAjB,kBACA,uBACIqD,MAAOR,EACPqC,SAAU,SAAA1B,GAAC,OAAIV,EAAQU,EAAE2B,OAAO9B,QAChC9C,KAAK,OACLP,UAAU,oBAGlB,wBAAQO,KAAK,SAASP,UAAU,kBAAhC,wB,wBC0BGoF,EAxFE,SAACrF,GAEd,MAAgCoD,oBAAS,GAAzC,mBAAOkC,EAAP,KAAiBC,EAAjB,KACA,EAAkCnC,mBAASpD,EAAM4C,OAAjD,mBAAO4C,EAAP,KAAkBC,EAAlB,KACQzC,EAAUQ,qBAAWhB,GAArBQ,MAEF0C,EAAeC,mBAyCrB,OACI,qBAAK1F,UAAU,YAAf,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAIA,UAAU,qEACV2F,MAAO,CAAEC,WAAY7F,EAAM6D,UAAY,QAAU,OADrD,UAEI,uBACIrD,KAAK,OACLsF,IAAKJ,EACLpC,MAAOkC,EACPL,SAAU,SAAA1B,GAAC,OAAIgC,EAAahC,EAAE2B,OAAO9B,QACrCsC,MAAO,CAAEG,cAAeT,EAAW,QAAU,UAEjD,wBAAQrF,UAAU,MAAM+F,QAAS,kBAnDxB,SAAC3F,GACtB,IAAM4F,EAAgBjG,EAAM0C,MAAMwD,QAAO,SAAAC,GAAI,OAAIA,EAAK9F,KAAOA,KAC7DL,EAAM2C,SAASsD,GAiDoCG,CAAiBpG,EAAMK,KAA9D,SACI,cAAC,IAAD,CAAiBgG,KAAMC,QAEzBhB,EAKE,wBAAQrF,UAAU,MAAM+F,QAAS,kBAjD9B,SAAC3F,GACpBkF,GAAaD,GACb,IAAMiB,EAAevG,EAAM0C,MAAMwD,QAAO,SAAAC,GAAI,OAAIA,EAAK9F,KAAOA,KACxDmG,EAAU,2BACPD,EAAa,IADN,IAEV3D,MAAO4C,EACPnF,GAAIuD,cACJC,WAAW,IAEToC,EAAgBjG,EAAM0C,MAAMwD,QAAO,SAAAC,GAAI,OAAIA,EAAK9F,KAAOA,KACzDoG,EAAU,sBAAOR,GAAP,CAAsBO,IAEpCxG,EAAM2C,SAAS8D,EAAWC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEzC,KAAO0C,EAAE1C,SAqCG2C,CAAe7G,EAAMK,KAA5D,SACI,cAAC,IAAD,CAAiBgG,KAAMS,QAL3B,wBAAQ7G,UAAU,MAAM+F,QAAS,kBAAqBhG,EAAMK,GAjD5EkF,GAAaD,QACbI,EAAaqB,QAAQC,SAgDL,SACI,cAAC,IAAD,CAAiBX,KAAMY,QAO/B,wBAAQhH,UAAU,MAAM+F,QAAS,kBAtCzB,SAAC3F,GACrB,IAAI6G,EAAclH,EAAM0C,MAAMyE,KAAI,SAAAC,GAC9B,OAAIA,EAAK/G,KAAOA,EACL,2BAAK+G,GAAZ,IAAkBvD,WAAW,IAGtB,eAAKuD,MAIpBpH,EAAM2C,SAASuE,GA4BoCG,CAAgBrH,EAAMK,KAA7D,SACI,cAAC,IAAD,CAAiBgG,KAAMiB,WAG/B,sBAAKrH,UAAU,+DAAf,UACI,sBAAMA,UAAU,sBAAhB,SAAuCD,EAAM8C,OAC7C,sBAAM7C,UAAU,sBAAhB,SAAuCD,EAAM8D,iBAGjD,qBAAK7D,UAAU,+DAAf,SACI,oBAAIA,UAAU,yBAAd,SAAwC+C,EAAMuE,IAAI,aCvBvDC,EA1DF,SAACxH,GAEV,MAA0BoD,mBAAS,IAAnC,mBAAOV,EAAP,KAAcC,EAAd,KACOK,EAASQ,qBAAWhB,GAApBQ,MAmBP,OAhBAyE,qBAAU,WACN,IAAIC,EAAOC,aAAaC,QAAQ,SAC5BnB,EAAanF,KAAKuG,MAAMH,GACxBA,GACA/E,EAAS8D,KAEd,IAEHgB,qBAAU,WACNE,aAAaG,QAAQ,QAASxG,KAAKC,UAAUmB,MAC9C,CAACA,IAEJ+E,qBAAU,WACNM,QAAQC,IAAIhF,KACb,CAACA,IAGA,sBAAK/C,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,cAAC,IAAD,CAAMuB,GAAG,SAAT,SACI,wBAAQvB,UAAU,2BAAlB,uBAEJ,cAAC,IAAD,CAAMuB,GAAG,IAAT,SACI,wBAAQvB,UAAU,gCAAlB,4BAEJ,cAAC,EAAD,CACIyC,MAAOA,EACPC,SAAUA,OAGlB,qBAAK1C,UAAU,QAAf,SAESyC,GAA2B,KAAb,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOzB,QAAgByB,EAAMyE,KAAI,SAAAhB,GAAI,OAC3C,cAAC,EAAD,CAEI9F,GAAI8F,EAAK9F,GACTuC,MAAOuD,EAAKvD,MACZE,KAAMqD,EAAKrD,KACXmF,OAAQ9B,EAAK8B,OACbpE,UAAWsC,EAAKtC,UAChBC,YAAaqC,EAAKrC,YAClB/B,KAAMoE,EAAKpE,KACXW,MAAOA,EACPC,SAAUA,GATLwD,EAAK9F,OAWb,qDCnCV6H,EAnBC,SAAClI,GACb,OACI,qBAAKC,UAAU,YAAf,SACI,sBAAKA,UAAU,8CAAf,UACI,oBAAIA,UAAU,OAAd,sBACA,oBAAIA,UAAU,OAAd,2DACA,oBAAIA,UAAU,OAAd,uCACA,cAAC,IAAD,CAAMuB,GAAG,UAAUvB,UAAU,SAA7B,SACI,wBAAQA,UAAU,uBAAlB,sBAEJ,qBAAIA,UAAU,OAAd,qCAA6C,uBAA7C,kCACA,cAAC,IAAD,CAAMuB,GAAG,SAASvB,UAAU,SAA5B,SACI,wBAAQA,UAAU,uBAAlB,2BC0BLkI,EA1BH,WAER,OAEI,sBAAKlI,UAAU,YAAf,UACI,cAAC,IAAD,CACI0E,SAAS,WACTC,UAAW,IACXC,iBAAiB,EACjBuD,aAAa,EACbtD,cAAY,EACZuD,KAAK,EACLC,kBAAgB,EAChBtD,WAAS,EACTD,cAAY,IAEhB,eAAC,IAAD,WACI,cAAC,IAAD,CAAOwD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,aC5B9CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAQC,SAAUC,YAAlB,SACE,cAAC,EAAD,UACE,cAAC,EAAD,UAKNC,SAASC,eAAe,W","file":"static/js/main.2bb5cd14.chunk.js","sourcesContent":["import { React } from 'react';\r\nimport { Field, ErrorMessage } from 'formik';\r\n\r\nconst FormInput = (props) => {\r\n    return (\r\n        <div className=\"mb-3\">\r\n            <label className=\"form-label text-black\" htmlFor={props.for}>{props.label}</label>\r\n            <Field\r\n                className=\"form-control\"\r\n                id={props.id}\r\n                name={props.name}\r\n                placeholder={props.placeholder}\r\n                type={props.type}\r\n            />\r\n            <span className=\"text-danger\">\r\n                <ErrorMessage name={props.name} />\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormInput;","import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport { Link } from \"react-router-dom\";\r\nimport FormInput from './FormInput';\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-6 login-container\">\r\n                <Formik\r\n                    initialValues={{\r\n                        email: '',\r\n                        password: ''\r\n                    }}\r\n\r\n                    validate={values => {\r\n                        const errors = {};\r\n\r\n                        if (!values.email) {\r\n                            errors.email = 'Required';\r\n                        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                            errors.email = 'Invalid email address';\r\n                        }\r\n\r\n                        if (!values.password) {\r\n                            errors.password = 'Required';\r\n                        } else if (values.password.length < 6) {\r\n                            errors.password = 'Must be at least 6 characters';\r\n                        }\r\n\r\n                        return errors;\r\n                    }}\r\n\r\n                    onSubmit={(values, { setSubmitting }) => {\r\n                        setTimeout(() => {\r\n                            alert(JSON.stringify(values, null, 2));\r\n                            setSubmitting(false);\r\n                        }, 400);\r\n\r\n                    }}\r\n                >\r\n                    <Form>\r\n                        <FormInput\r\n                            label=\"Email Address\"\r\n                            for=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Ali@gmail.com\"\r\n                            type=\"email\"\r\n                        />\r\n\r\n                        <FormInput\r\n                            label=\"Password\"\r\n                            for=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"******\"\r\n                            type=\"password\"\r\n                        />\r\n\r\n                        <div className=\"d-flex justify-content-center flex-column align-items-center\">\r\n                            <button type=\"submit\" className=\"btn btn-primary text-center w-75\">Log In</button>\r\n                            <p className=\"text-black text-center py-2 m-0\">Are you new ?</p>\r\n                            <Link to=\"/signup\">\r\n                                <h6 className=\"text-center sign-button\">Sign Up</h6>\r\n                            </Link>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </Formik>\r\n            </div>\r\n            <Link to=\"/\">\r\n                <button className=\" btn btn-secondary backtohome\">Landing Page</button>\r\n            </Link>\r\n            <Link to=\"/todo\">\r\n                <button className=\" btn btn-secondary todoapp\">Todo App</button>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport { Link } from \"react-router-dom\";\r\nimport FormInput from './FormInput';\r\n\r\nconst SignUpForm = () => {\r\n\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-6 login-container\">\r\n                <Formik\r\n                    initialValues={{\r\n                        firstName: '',\r\n                        lastName: '',\r\n                        email: '',\r\n                        password: '',\r\n                        passwordRepeat: ''\r\n                    }}\r\n\r\n                    validate={values => {\r\n                        const errors = {};\r\n\r\n                        if (!values.firstName) {\r\n                            errors.firstName = 'Required';\r\n                        } else if (values.firstName.match(/\\d+/g)) {\r\n                            errors.firstName = 'It should be a text'\r\n                        }\r\n\r\n                        if (!values.lastName) {\r\n                            errors.lastName = 'Required';\r\n                        } else if (values.firstName.match(/\\d+/g)) {\r\n                            errors.lastName = 'It should be a text'\r\n                        }\r\n\r\n                        if (!values.email) {\r\n                            errors.email = 'Required';\r\n                        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                            errors.email = 'Invalid email address';\r\n                        }\r\n\r\n                        if (!values.password) {\r\n                            errors.password = 'Required';\r\n                        } else if (values.password.length < 6) {\r\n                            errors.password = 'Must be at least 6 characters';\r\n                        }\r\n\r\n                        if (!values.passwordRepeat) {\r\n                            errors.passwordRepeat = 'Required';\r\n                        } else if (values.passwordRepeat !== values.password) {\r\n                            errors.passwordRepeat = 'Passwords are not the same';\r\n                        }\r\n\r\n                        return errors;\r\n                    }}\r\n\r\n                    onSubmit={(values, { setSubmitting }) => {\r\n                        setTimeout(() => {\r\n                            alert(JSON.stringify(values, null, 2));\r\n                            setSubmitting(false);\r\n                        }, 400);\r\n                    }}\r\n                >\r\n                    <Form>\r\n                        <FormInput\r\n                            label=\"First Name\"\r\n                            for=\"firstName\"\r\n                            id=\"firstName\"\r\n                            name=\"firstName\"\r\n                            placeholder=\"Ali\"\r\n                            type=\"text\"\r\n                        />\r\n                        <FormInput\r\n                            label=\"Last Name\"\r\n                            for=\"lastName\"\r\n                            id=\"lastName\"\r\n                            name=\"lastName\"\r\n                            placeholder=\"Khalilian\"\r\n                            type=\"text\"\r\n                        />\r\n                        <FormInput\r\n                            label=\"Email\"\r\n                            for=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Ali@gmail.com\"\r\n                            type=\"email\"\r\n                        />\r\n                        <FormInput\r\n                            label=\"Password\"\r\n                            for=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"******\"\r\n                            type=\"password\"\r\n                        />\r\n                        <FormInput\r\n                            label=\"Repeat Password\"\r\n                            for=\"passwordRepeat\"\r\n                            id=\"passwordRepeat\"\r\n                            name=\"passwordRepeat\"\r\n                            placeholder=\"******\"\r\n                            type=\"password\"\r\n                        />\r\n                        <div className=\"d-flex justify-content-center flex-column align-items-center\">\r\n                            <button type=\"submit\" className=\"btn btn-primary text-center w-75\">Sign Up</button>\r\n                            <p className=\"text-black text-center py-2 m-0\">Already signed up ?</p>\r\n                            <Link to=\"/login\">\r\n                                <h6 className=\"text-center sign-button\">Log In</h6>\r\n                            </Link>\r\n                        </div>\r\n                    </Form>\r\n                </Formik>\r\n            </div>\r\n            <Link to=\"/\">\r\n                <button className=\" btn btn-secondary backtohome\">Landing Page</button>\r\n            </Link>\r\n            <Link to=\"/todo\">\r\n                <button className=\" btn btn-secondary todoapp\">Todo App</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUpForm;","export const stopWatchFormatter = (timer) => {\r\n    const getSeconds = `0${(timer % 60)}`.slice(-2)\r\n    const minutes = `${Math.floor(timer / 60)}`\r\n    const getMinutes = `0${minutes % 60}`.slice(-2)\r\n    const getHours = `0${Math.floor(timer / 3600)}`.slice(-2)\r\n\r\n    return `${getHours} : ${getMinutes} : ${getSeconds}`\r\n}\r\n\r\nexport const createdTimeFormatter = (date) => {\r\n    const todoDate = date.getFullYear() + '/' + (date.getMonth() + 1) + '/' + date.getDate();\r\n    const todoTime = date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds();\r\n    // const todoTime = date.toLocaleTimeString();\r\n\r\n    return `${todoDate} - ${todoTime}`\r\n}\r\n\r\nexport const handleClear = () => {\r\n    clearInterval()\r\n}","import { createContext, useState } from \"react\";\r\n\r\nexport const Contexts = createContext({\r\n    todos: [], setTodos: () => { },\r\n    title: '', setTitle: () => { },\r\n    text: '', setText: () => { },\r\n    timer: [], setTimer: () => { },\r\n    // editable: false, setEditable: () => { },\r\n    // todoTitle: '', setTodoTitle: () => { },\r\n\r\n})\r\n\r\nexport const Context = ({ children }) => {\r\n\r\n    const [todos, setTodos] = useState([]);\r\n    const [title, setTitle] = useState('');\r\n    const [text, setText] = useState('');\r\n    const [timer, setTimer] = useState([]);\r\n    // const [editable, setEditable] = useState(false);\r\n    // const [todoTitle, setTodoTitle] = useState(title);\r\n\r\n    return (\r\n        <Contexts.Provider value={{\r\n            todos, setTodos,\r\n            title, setTitle,\r\n            text, setText,\r\n            timer, setTimer,\r\n            // editable, setEditable,\r\n            // todoTitle, setTodoTitle,\r\n        }}>\r\n            {children}\r\n        </Contexts.Provider>\r\n    )\r\n}","import React, { useContext, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { toast } from 'react-toastify';\r\nimport { createdTimeFormatter, stopWatchFormatter } from '../../common/TimeFormatter';\r\nimport { Contexts } from './../../context/Context';\r\n\r\nconst TodoForm = (props) => {\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [text, setText] = useState('');\r\n    const { timer, setTimer } = useContext(Contexts)\r\n\r\n    const handleSetTodo = (e) => {\r\n        e.preventDefault();\r\n        if (title && text) {\r\n            let newTodo = {\r\n                title,\r\n                text,\r\n                id: uuidv4(),\r\n                isChecked: false,\r\n                createdTime: createdTimeFormatter(new Date()),\r\n                date: Date.now()\r\n            }\r\n            props.setTodos([...props.todos, newTodo]);\r\n            setTitle('');\r\n            setText('');\r\n            setInterval(() => {\r\n                let time = stopWatchFormatter(((Date.now() - newTodo.date) / 1000).toFixed());\r\n                setTimer([...timer, time]);\r\n            }, 1000);\r\n        }\r\n        else {\r\n            toast.error('Inputs are Empty', {\r\n                position: \"top-left\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <form\r\n            onSubmit={handleSetTodo}\r\n            className='todo-form d-flex flex-column justify-content-center'>\r\n            <h1>Todo Form</h1>\r\n            <div className=\"mb-3\">\r\n                <label className=\"form-label\">TITLE</label>\r\n                <input\r\n                    value={title}\r\n                    onChange={e => setTitle(e.target.value)}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <label className=\"form-label\">info</label>\r\n                <input\r\n                    value={text}\r\n                    onChange={e => setText(e.target.value)}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n        </form>\r\n\r\n    );\r\n}\r\n\r\nexport default TodoForm;","import React, { useState, useRef, useContext } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faEdit, faSave, faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Contexts } from './../../context/Context';\r\n\r\nconst TodoCard = (props) => {\r\n\r\n    const [editable, setEditable] = useState(false);\r\n    const [todoTitle, setTodoTitle] = useState(props.title);\r\n    const { timer } = useContext(Contexts)\r\n\r\n    const inputElement = useRef()\r\n\r\n    const handleDeleteTodo = (id) => {\r\n        const filteredTodos = props.todos.filter(todo => todo.id !== id);\r\n        props.setTodos(filteredTodos);\r\n    }\r\n\r\n    const handleEditTodo = (id) => {\r\n        setEditable(!editable);\r\n        inputElement.current.focus();\r\n    }\r\n\r\n    const handleSaveTodo = (id) => {\r\n        setEditable(!editable);\r\n        const changedTodos = props.todos.filter(todo => todo.id === id);\r\n        let editedTodo = {\r\n            ...changedTodos[0],\r\n            title: todoTitle,\r\n            id: uuidv4(),\r\n            isChecked: false,\r\n        }\r\n        const filteredTodos = props.todos.filter(todo => todo.id !== id);\r\n        let savedTodos = [...filteredTodos, editedTodo];\r\n\r\n        props.setTodos(savedTodos.sort((a, b) => a.time - b.time));\r\n    }\r\n\r\n    const handleCheckTodo = (id) => {\r\n        let checkedList = props.todos.map(item => {\r\n            if (item.id === id) {\r\n                return { ...item, isChecked: true }\r\n            }\r\n            else {\r\n                return { ...item }\r\n            }\r\n        })\r\n\r\n        props.setTodos(checkedList);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"card my-3\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title d-flex align-items-center  justify-content-between px-4\"\r\n                    style={{ background: props.isChecked ? \"green\" : \"red\" }}>\r\n                    <input\r\n                        type=\"text\"\r\n                        ref={inputElement}\r\n                        value={todoTitle}\r\n                        onChange={e => setTodoTitle(e.target.value)}\r\n                        style={{ pointerEvents: editable ? \"unset\" : \"none\" }}\r\n                    />\r\n                    <button className='btn' onClick={() => handleDeleteTodo(props.id)}>\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                    </button>\r\n                    {!editable ?\r\n                        <button className='btn' onClick={() => handleEditTodo(props.id)}>\r\n                            <FontAwesomeIcon icon={faEdit} />\r\n                        </button>\r\n                        :\r\n                        <button className='btn' onClick={() => handleSaveTodo(props.id)}>\r\n                            <FontAwesomeIcon icon={faSave} />\r\n                        </button>\r\n                    }\r\n                    <button className='btn' onClick={() => handleCheckTodo(props.id)}>\r\n                        <FontAwesomeIcon icon={faCheck} />\r\n                    </button>\r\n                </h5>\r\n                <div className=\"d-flex flex-row justify-content-between align-content-center\">\r\n                    <span className=\"card-text px-4 py-3\">{props.text}</span>\r\n                    <span className=\"card-text px-4 py-3\">{props.createdTime}</span>\r\n                </div>\r\n                {/* <StopWatch date={props.date} /> */}\r\n                <div className=\"d-flex flex-row justify-content-between align-content-center\">\r\n                    <h6 className=\"px-4 align-self-center\">{timer.at(-1)}</h6>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoCard;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport TodoForm from './TodoForm';\r\nimport TodoCard from './TodoCard';\r\nimport { Link } from 'react-router-dom';\r\nimport { Contexts } from './../../context/Context';\r\n\r\nconst Todo = (props) => {\r\n\r\n    const [todos, setTodos] = useState([]);\r\n    const {timer} = useContext(Contexts)\r\n\r\n\r\n    useEffect(() => {\r\n        let data = localStorage.getItem('todos');\r\n        let savedTodos = JSON.parse(data);\r\n        if (data) {\r\n            setTodos(savedTodos)\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify(todos));\r\n    }, [todos]);\r\n\r\n    useEffect(() => {\r\n        console.log(timer);\r\n    }, [timer])\r\n\r\n    return (\r\n        <div className='row'>\r\n            <div className=\"col-6\">\r\n                <Link to=\"/login\">\r\n                    <button className=\"btn btn-secondary logout\">Log Out</button>\r\n                </Link>\r\n                <Link to=\"/\">\r\n                    <button className=\" btn btn-secondary backtohome\">Landing Page</button>\r\n                </Link>\r\n                <TodoForm\r\n                    todos={todos}\r\n                    setTodos={setTodos}\r\n                />\r\n            </div>\r\n            <div className='col-6'>\r\n                {\r\n                    (todos && todos?.length !== 0) ? todos.map(todo => (\r\n                        <TodoCard\r\n                            key={todo.id}\r\n                            id={todo.id}\r\n                            title={todo.title}\r\n                            text={todo.text}\r\n                            active={todo.active}\r\n                            isChecked={todo.isChecked}\r\n                            createdTime={todo.createdTime}\r\n                            date={todo.date}\r\n                            todos={todos}\r\n                            setTodos={setTodos}\r\n                        />\r\n                    )) : <h1>Add New Todos</h1>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Landing = (props) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row text-center justify-content-center mt-5\">\r\n                <h1 className=\"my-3\">Todo App</h1>\r\n                <h2 className=\"my-3\">To use this app, you need to have an account.</h2>\r\n                <h3 className=\"my-3\">Create your account here:</h3>\r\n                <Link to=\"/signup\" className=\"w-auto\">\r\n                    <button className=\"btn btn-primary my-3\">SignUp</button>\r\n                </Link>\r\n                <h3 className=\"my-3\">Already have an account?<br />Log in to your account here:</h3>\r\n                <Link to=\"/login\" className=\"w-auto\">\r\n                    <button className=\"btn btn-primary my-3\">LogIn</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Landing;","import React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../assets/main.scss';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport LoginForm from './Form/LoginForm';\r\nimport SignUpForm from './Form/SignUpForm';\r\nimport Todo from './Todo/Todo';\r\nimport Landing from './Landing/Landing';\r\n\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n\r\n        <div className='container'>\r\n            <ToastContainer\r\n                position=\"top-left\"\r\n                autoClose={2000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <Routes>\r\n                <Route path=\"/\" element={<Landing />} />\r\n                <Route path=\"/todo\" element={<Todo />} />\r\n                <Route path=\"/signup\" element={<SignUpForm />} />\r\n                <Route path=\"/login\" element={<LoginForm />} />\r\n            </Routes>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Context } from './context/Context';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Context>\n        <App />\n      </Context>\n    </Router>\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}